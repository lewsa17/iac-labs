# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Poetry Install

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read
  
jobs:
 build:
    strategy:
      matrix:
        os: [ "ubuntu-latest", "windows-latest" ]
    runs-on: ubuntu-latest    
    defaults:
      run:
        working-directory: /home/runner/work/iac-labs/iac-labs/example-app
        shell: bash
        
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install Poetry
      uses: snok/install-poetry@v1      
    - name: Install dependencies
      run: |
        poetry install --no-root --no-interaction
    - name: Cache build venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: /home/runner/.cache/pypoetry/virtualenvs
        key: ${{ runner.os }}-venv
      
 lint:
    strategy:
      matrix:
        os: [ "ubuntu-latest", "windows-latest" ]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: /home/runner/work/iac-labs/iac-labs/example-app
    needs: build
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - name: Install Poetry
        uses: snok/install-poetry@v1      
      - name: Cache build venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: /home/runner/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-venv
      - name: Task lint
        run: poetry run task lint
 
 formatter:
    strategy:
      matrix:
        os: [ "ubuntu-latest", "windows-latest" ]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: /home/runner/work/iac-labs/iac-labs/example-app
    needs: build
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - name: Install Poetry
        uses: snok/install-poetry@v1      
      - name: Cache build venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: /home/runner/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-venv
      - name: Task Formatter
        run: poetry run task formatter

 security:
    strategy:
      matrix:
        os: [ "ubuntu-latest", "windows-latest" ]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: /home/runner/work/iac-labs/iac-labs/example-app
    needs: build
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - name: Install Poetry
        uses: snok/install-poetry@v1      
      - name: Cache build venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: /home/runner/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-venv
      - name: Task lint
        run: poetry run task lint
      - name: Task Formatter
        run: poetry run task formatter
      - name: Task Security
        run: poetry run task security
  
 Unitests:
    strategy:
      matrix:
        os: [ "ubuntu-latest", "windows-latest" ]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: /home/runner/work/iac-labs/iac-labs/example-app
    needs: [lint, formatter, security]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - name: Install Poetry
        uses: snok/install-poetry@v1          
      - name: Cache build venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: /home/runner/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-venv
      - name: Task UniTest
        run: poetry run task test
